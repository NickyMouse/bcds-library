<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans default-autowire="byName">

	<bean id="bookSearchHelper" class="com.alibaba.intl.bcds.goldroom.util.BookSearchHelper" />

	<!-- Search annotation configuration -->
	<bean id="annotationConfiguration"
		class="org.compass.annotations.config.CompassAnnotationsConfiguration" />

	<!-- compass configuration -->
	<bean id="compass" class="org.compass.spring.LocalCompassBean">
		<property name="transactionManager" ref="transactionManager" />
		<property name="compassSettings">
			<props>
				<!-- index path -->
				<prop key="compass.engine.connection">${goldroom.index.path}/newIndex</prop>
				<prop key="compass.transaction.factory">
					org.compass.spring.transaction.SpringSyncTransactionFactory
            	</prop>
				<!-- search engine analyzer -->
				<!-- <prop key="compass.engine.analyzer.MMAnalyzer.CustomAnalyzer"> org.mira.lucene.analysis.IK_CAnalyzer</prop> -->

				<prop key="compass.engine.highlighter.default.formatter.simple.pre">
					<![CDATA[<font color="red"><b>]]>
				</prop>
				<prop key="compass.engine.highlighter.default.formatter.simple.post">
					<![CDATA[</b></font>]]>
				</prop>
			</props>
		</property>
		<!-- the annotation bean -->
		<property name="classMappings">
			<list>
				<value>com.alibaba.intl.bcds.goldroom.dataobject.BookInfo</value>
			</list>
		</property>
	</bean>

	<!-- gps device configuration, is a customized jpaGpsDevice -->
	<bean id="hibernateGpsDevice"
		class="com.alibaba.intl.bcds.goldroom.search.commons.CustomizedHibernateGpsDevice"
		init-method="initSelectQuery">
		<property name="name" value="hibernateGpsDevice" />
		<property name="entityQueryMap">
			<map>
				<entry key="com.alibaba.intl.bcds.goldroom.dataobject.BookInfo"
					value="SELECT b FROM BookInfo b, BookItem i where b.id = i.bookInfo.id GROUP BY b.id" />
			</map>
		</property>
		<property name="mirrorDataChanges" value="true" />
		<property name="entitiesLocator" ref="locator" />
		<property name="nativeExtractor" ref="extractor" />
		<property name="lifecycleInjector" ref="injector" />
	</bean>

	<bean id="injector"
		class="org.compass.gps.device.hibernate.lifecycle.DefaultHibernateEntityLifecycleInjector" />
	<bean id="extractor"
		class="org.compass.spring.device.hibernate.SpringNativeHibernateExtractor" />
	<bean id="locator"
		class="org.compass.gps.device.hibernate.entities.DefaultHibernateEntitiesLocator" />

	<bean id="compassGps" class="org.compass.gps.impl.SingleCompassGps"
		init-method="start" destroy-method="stop">
		<property name="gpsDevices">
			<ref bean="hibernateGpsDevice" />
		</property>
	</bean>

	<bean id="compassTemplate" class="org.compass.core.CompassTemplate" />

	<!-- index builder job -->
	<bean id="indexBuildJobBean" class="com.alibaba.intl.bcds.goldroom.search.job.IndexBuildJob"
		init-method="init">
		<property name="buildOnStart" value="${goldroom.index.buildOnStart}" />
	</bean>

	<bean name="indexBuildJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="indexBuildJobBean" />
		<property name="targetMethod" value="fullBuild" />
		<property name="concurrent" value="false" />
	</bean>


	<!-- the job will run every day at 23:00 -->
	<bean id="indexCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<ref bean="indexBuildJob" />
		</property>
		<property name="cronExpression">
			<value>0 0 23 * * ?</value>
		</property>
	</bean>

	<bean id="tagBuildJobBean" class="com.alibaba.intl.bcds.goldroom.search.job.TagBuildJob"
		init-method="build">
		<property name="pageSize" value="20" />
	</bean>

	<bean name="tagBuildJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="tagBuildJobBean" />
		<property name="targetMethod" value="build" />
		<property name="concurrent" value="false" />
	</bean>


	<!-- the job will run every hour -->
	<bean id="tagSimpleTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail" ref="tagBuildJob" />
		<property name="startDelay" value="0" />
		<property name="repeatInterval" value="${goldroom.tags.refresh.interval}" />
	</bean>


	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean"
		autowire="no">
		<property name="triggers">
			<list>
				<ref local="indexCronTrigger" />
				<ref local="tagSimpleTrigger" />
			</list>
		</property>
	</bean>
</beans>