<style type="text/css">

    #selectDiv{ 
        width:420px;
        height:220px;
        background:#EDF1F8; 
        border: 1px solid #849BCA;
        float:left;
        overflow:hidden;
        position:absolute;
        left:500px;
        top:537px;
        cursor:move;
        float:left;
    }
    .content{
    padding:5px;
    }
</style>
<script type="text/javascript">
    //类目对象
    function Category(id,name,parantId,level)
    {
    this.id=id;
    this.name=name;
    this.parantId=parantId;
    this.level=level;
    }
    //类目路径对象
    function categoryOption(categoryId,categoryPath)
    {
    this.categoryId=categoryId;
    this.categoryPath=categoryPath;
    }
    //初始化数据
    var categoryArray=null;
    var isLeaf=0;
    function init()
    {
    //全局，赋值规则是数组下标必须等于categoryId
    if(categoryArray ==null)
    {
    categoryArray = new Array();
	
    //全局变量
    categoryRootId=0; //根的ID
    categoryMaxLevel=9; //树形最大层级数
    selectOptionNormalWidth=100;//option的正常宽度
    selectOptionMinWidth=50;//option缩小后的宽度
    categoryPathSize=41;//类目路径的最大长度
	
	#foreach($category in ${categoryCache.categorys})
		 categoryArray[$!{category.id}]=new Category($!{category.id},'$!{category.name}',$!{category.parentId},$!{category.level});
	#end
    
    $("select1").options.length=0;//初始化第1层的数据
    for(var i=0;i<categoryArray.length;i++)
        {
        if(categoryArray[i]!=null&&categoryArray[i].parantId==categoryRootId)
        {
        //动态向对应的select里面option
        var newOption=new Option(categoryArray[i].name,categoryArray[i].id);
        $("select1").options.add(newOption); 
        }
        }	
        }
        }
        function showOrHiddenDiv(){
        var selectDiv=$("selectDiv");
        if(selectDiv.style.display=="none")
        {
        show('selectDiv',getInputObj());
        }else
        {
        closeed('selectDiv');
        }
        $("select1").style.display=""; 
        }
        //初始化数据显示或隐藏层
        function initAndShowOrHiddenDiv(){
        init();
        showOrHiddenDiv();
        }
        function initAndShowCategory(){
        init();
        $("select1").style.display="";
        $("selectNearCategory").style.display="none";
        }
        //根据类目id查找子类目集合
        function findChildCategorys(categoryId,selectIndex)
        {
        var selectObj=$("select"+selectIndex);
        var categoryName="";
        selectObj.options.length=0;
        for(var i=0;i<categoryArray.length;i++)
            {
            if(categoryArray[i]!=null&&categoryArray[i].id!=categoryId&&categoryArray[i].parantId==categoryId)
            {
            //动态向对应的select里面option
            selectObj.options.add(new Option(categoryArray[i].name,categoryArray[i].id)); 
            }
            }
            for(var j=selectObj.options.length>0?selectIndex+1:selectIndex;j<categoryMaxLevel;j++)
                {
                $("select"+j).style.display="none"; 
                }
                if(selectObj.options.length==0)//叶子节点
                {		
                var categoryPath=getCategoryPathById(categoryId);
                $("categoryId").value=categoryId;
                var pathLength=categoryPath.length;
                $("categoryPath").value=pathLength>categoryPathSize?'...'+categoryPath.substring(pathLength-categoryPathSize,pathLength):categoryPath;
                $("categoryPath").title=categoryPath;
                isLeaf=1;
                }else {
                isLeaf=0;
                $("categoryId").value="";
                selectObj.style.display="block";			
                }
                //---动态调整option的宽度	       
                switch(selectIndex)
                {
                case 2: 
                case 3:
                case 4:
                $("select1").style.width=selectOptionNormalWidth;
                $("select2").style.width=selectOptionNormalWidth;
                $("select3").style.width=selectOptionNormalWidth;
                $("select4").style.width=selectOptionNormalWidth;
                break;     
                case 5:
                if(selectObj.options.length==0)$("select4").style.width=selectOptionNormalWidth
                $("select1").style.width=selectOptionMinWidth;
                $("select2").style.width=selectOptionMinWidth;
                break;
                case 6:
                $("select1").style.width=selectOptionMinWidth;
                $("select2").style.width=selectOptionMinWidth;
                $("select3").style.width=selectOptionMinWidth;
                break;
                case 7:
                $("select1").style.width=selectOptionMinWidth;
                $("select2").style.width=selectOptionMinWidth;
                $("select3").style.width=selectOptionMinWidth;
                $("select4").style.width=selectOptionMinWidth;
                break;       
                }    
                }
                //获取类目路径,返回 根类目>>类目 格式
                function getCategoryPathById(categoryId)
                {
                if(categoryArray[categoryId]==null)return "";
                var categoryPath=categoryArray[categoryId].name;
                var parantId=categoryArray[categoryId].parantId;
                while(parantId!=categoryRootId)
                {
                categoryPath=categoryArray[parantId].name+'>>'+categoryPath;
                parantId=categoryArray[parantId].parantId;
                }
                return categoryPath;
                }
                function findCategory(obj,selectIndex)
                {
                findChildCategorys(obj.value,selectIndex);
                }
                function showNearCategory()
                {
                //查找cookie数据
                var cookies = document.cookie.split(";");
                if(cookies.length<1)
                    {
                    $('categoryPath').value='最近选用类目为空';
                    return;
                    }
                    var selectObj=$('selectNearCategory');
                    selectObj.style.display="";
                    selectObj.options.length=0;
                    var categoryIds='';
                    var categoryOptionArr=new Array();
                    for (var i = 0,j=0; i < cookies.length; i++)
                        {		
                        var cookieCrumbs = cookies[i].split("=");				   
                        var cookieName = trim(cookieCrumbs[0]);			    
                        var cookieValue = cookieCrumbs[1];	
                        if(categoryArray[cookieName]==null)continue;		
                        if((categoryIds.indexOf(","+cookieName+","))<0)
                            {
                            categoryOptionArr[j++]=new categoryOption(cookieName,unescape(cookieValue));
                            categoryIds+=","+cookieName+","
                            }
                            }
                            for(var optionIndex=categoryOptionArr.length-1;optionIndex>=0;optionIndex--)
                            {
                            selectObj.options.add(new Option(categoryOptionArr[optionIndex].categoryPath,categoryOptionArr[optionIndex].categoryId)); 
                            }
                            for(var index=1;index<9;index++)
                                {
                                $("select"+index).style.display="none";	
                                }
                                }
                                function fillCategoryByCookie(obj)
                                {
                                //判断该类目没有失效
                                var categoryId=obj.value;
                                if(obj==null||categoryArray==null)return;
                                if(getCategoryPathById(categoryId)=="")return;
                                var categoryPath=getCategoryPathById(categoryId);
                                var pathLength=categoryPath.length;
                                $("categoryPath").value=pathLength>categoryPathSize?'...'+categoryPath.substring(pathLength-categoryPathSize,pathLength):categoryPath;
                                $("categoryPath").title=categoryPath;
                                $("categoryId").value=categoryId;
                                 isLeaf=1;
                                }
                                function category2Cookie()
                                {
                               
                                var c_name=$('categoryId').value;
                                var c_value=$('categoryPath').title.length>categoryPathSize?$('categoryPath').title.substring(0,categoryPathSize)+'...':$('categoryPath').title;
                                SetCookie(c_name,c_value,1000);	
                                }
                                //写入Cookie
                                function SetCookie(c_name,c_value,c_expires,c_path,c_domain,c_secure)
                                {  
                                var expdate = new Date();
                                var argv = SetCookie.arguments;
                                var argc = SetCookie.arguments.length;
                                var expires = (argc > 2) ? argv[2] : null;
                                var path = (argc > 3) ? argv[3] : null;
                                var domain = (argc > 4) ? argv[4] : null;
                                var secure = (argc > 5) ? argv[5] : false;
                                if(expires!=null) expdate.setTime(expdate.getTime() + ( expires * 1000 ));//过期时间
                                document.cookie = c_name + "=" + escape (c_value) +((expires == null) ? "" : ("; expires="+ expdate.toGMTString()))
                                +((path == null) ? "" : ("; path=" + path)) +((domain == null) ? "" : ("; domain=" + domain))
                                +((secure == true) ? "; secure" : "");
                                //alert("系统提示您："+c_name+"="+c_value+"成功添加cookie");
                                }
                                //根据cookie key查找值
                                function getCookie(searchName)
                                {
                                var cookies = document.cookie.split(";");
                                for (var i = 1; i < cookies.length-1; i++)
                                    {
                                    var cookieCrumbs = cookies[i].split("=");		
                                    var cookieName = cookieCrumbs[0];		
                                    var cookieValue = cookieCrumbs[1];		
                                    if (cookieName == searchName)
                                    {
                                    return cookieValue;
                                    }		
                                    }
                                    return false;
                                    }
                                    //获得Cookie的原始值
                                    function GetCookie(name)
                                    {
                                    var arg = name + "=";
                                    var alen = arg.length;
                                    var clen = document.cookie.length;
                                    var i = 0;
                                    while (i < clen)
                                        {
                                        var j = i + alen;
                                        if (document.cookie.substring(i, j) == arg)
                                        return GetCookieVal (j);
                                        i = document.cookie.indexOf(" ", i) + 1;
                                        if (i == 0) break;
                                        }
                                        return null;
                                        }
                                        //获得Cookie解码后的值
                                        function GetCookieVal(offset)
                                        {
                                        var endstr = document.cookie.indexOf (";", offset);
                                        if (endstr == -1)
                                        endstr = document.cookie.length;
                                        return unescape(document.cookie.substring(offset, endstr));
                                        }
                                        function DelCookie(name)//删除Cookie
                                        {
                                        var exp = new Date();
                                        exp.setTime (exp.getTime() - 1);	
                                        var cval = GetCookie(name);	
                                        document.cookie = name + "=" + cval + "; expires="+ exp.toGMTString();
                                        window.history.go(0);
                                        }
function DelAllCookie()
{
    var exp = new Date();
    exp.setTime (exp.getTime() - 1);	
    var cookies=document.cookie.split(";");
    for(var i=0;i<cookies.length;i++)
        {
        var cookCrumbs=cookies[i].split("=");
        var cookName=cookCrumbs[0];
        DelCookie(cookName);	 
        }
  }
function ltrim(s) {
return s.replace(/^\s*/, "");
}
function rtrim(s) {
return s.replace(/\s*$/, "");
}
function trim(s) {
return rtrim(ltrim(s));
}
    //获取对象
    function $(elementId)
    {
    return document.getElementById(elementId);
    }
    document.ondblclick=hiddenDiv;
    function hiddenDiv()
    {
   
    if(isLeaf==0)
    {                                         
        if($('selectDiv').style.display=="none")return;
        if(confirm("您当前选择的不是叶子类目,是否放弃当前选择的类目？"))
        {
        closeed('selectDiv');
        }                                           
    }else{  	
    closeed('selectDiv');	
    }	
    }
	var prox;
	var proy;
	var proxc;
	var proyc;
  function show(id,objL){/*--打开(需要打开的对象Id，显示在obj对象下方位置)--*/
   clearInterval(prox);
   clearInterval(proy);
   clearInterval(proxc);
   clearInterval(proyc);
   var o = $(id);
   o.style.display = "block";
   //打开层的相对位置
   o.style.width = "1px";
   o.style.height = "1px"; 
    var ttop = objL.offsetTop; //TT控件的定位点高   
    var thei = objL.clientHeight; //TT控件本身的高
    var tleft = objL.offsetLeft; //TT控件的定位点宽
   
    var ttyp = objL.type; //TT控件的类型
   while (objL = objL.offsetParent){ttop+=objL.offsetTop; tleft+=objL.offsetLeft;}
   o.style.top=(ttyp=="image") ? ttop+thei : ttop+thei+6;
   o.style.left=tleft;
   $("childDiv").style.display="";
   prox = setInterval(function(){openx(o,423)},5);
} 
//获取输入框对象
function getInputObj()
{
   return $('categoryPath');
}
                                            function openx(o,x){/*--打开x--*/
                                            var cx = parseInt(o.style.width);
                                            if(cx < x)
                                                {
                                                o.style.width = (cx + Math.ceil((x-cx)/5)) +"px";
                                                }
                                                else
                                                {
                                                clearInterval(prox);
                                                proy = setInterval(function(){openy(o,220)},5);
                                                }
                                                } 
                                                function openy(o,y){/*--打开y--*/ 
                                                var cy = parseInt(o.style.height);
                                                if(cy < y)
                                                    {
                                                    o.style.height = (cy + Math.ceil((y-cy)/5)) +"px";
                                                    }
                                                    else
                                                    {
                                                    clearInterval(proy);   
                                                    }
                                                    } 
                                                    function closeed(id){/*--关闭--*/
                                                    clearInterval(prox);
                                                    clearInterval(proy);
                                                    clearInterval(proxc);
                                                    clearInterval(proyc);  
                                                    var o = $(id);
                                                    $("childDiv").style.display="none";
                                                    if(o.style.display == "block")
                                                    {
                                                    proyc = setInterval(function(){closey(o)},10);   
                                                    }  
                                                    } 
                                                    function closey(o){/*--关闭y--*/ 
                                                    var cy = parseInt(o.style.height);
                                                    if(cy > 0)
                                                    {
                                                    o.style.height = (cy - Math.ceil(cy/5)) +"px";
                                                    }
                                                    else
                                                    {
                                                    clearInterval(proyc);    
                                                    proxc = setInterval(function(){closex(o)},10);
                                                    }
                                                    } 
                                                    function closex(o){/*--关闭x--*/
                                                    var cx = parseInt(o.style.width);
                                                    if(cx > 0)
                                                    {
                                                    o.style.width = (cx - Math.ceil(cx/5)) +"px";
                                                    }
                                                    else
                                                    {
                                                    clearInterval(proxc);
                                                    o.style.display = "none";
                                                    }
                                                    } 
</script>
<table width="150">
    <tr>
        <td>
            <input type="hidden" id="categoryId" name="categoryId" readonly="true"  />
            <input type="text" id="categoryPath" name="categoryPath" title="点击选择类目" onClick="initAndShowOrHiddenDiv();" style="width:423px;"  readonly/>
			</td> <td>
            <input type="button" id="cate" value="选择" onClick="initAndShowOrHiddenDiv();" />
        </td>
    </tr>
    <tr>
        <td>
            <div id="selectDiv" style="display:none;filter:alpha(opacity=80);opacity:1;">
                <table style="border:1" >
                    <tr>
                        <td align="left">
                            <select id="selectNearCategory" name="selectNearCategory" size="11" style="width:415;display:none" onchange="fillCategoryByCookie(this);"></select>
                        </td>
                        <td>
                            <select id="select1" name="categoryOption" size="11" style="width:100;display:none" onchange="findCategory(this,2);"></select>
                        </td>
                        <td>
                            <select id="select2" name="categoryOption" size="11" style="width:100;display:none" onchange="findCategory(this,3);" ></select>
                        </td>
                        <td>
                            <select id="select3" name="categoryOption" size="11" style="width:100;display:none" onchange="findCategory(this,4);"></select>
                        </td>
                        <td>
                            <select id="select4" name="categoryOption" size="11" style="width:100;display:none" onchange="findCategory(this,5);"></select>
                        </td>
                        <td>
                            <select id="select5" name="categoryOption" size="11" style="width:100;display:none" onchange="findCategory(this,6);"></select>
                        </td>
                        <td>
                            <select id="select6" name="categoryOption" size="11" style="width:100;display:none" onchange="findCategory(this,7);"></select>
                        </td>
                        <td>
                            <select id="select7" name="categoryOption" size="11" style="width:100;display:none" onchange="findCategory(this,8);"></select>
                        </td>
                        <td>
                            <select id="select8" name="categoryOption" size="11" style="width:100;display:none" onchange="findCategory(this,9);"></select>
                        </td>
                    </tr>
                </table>
                <div class="content" align="right" id="childDiv">
                    <a onClick="showNearCategory();" title="显示您上一次选择过的类目">[最近选用过的类目]</a>
                    <a onClick="initAndShowCategory();" title="显示书籍的类目树">[显示类目树]</a>
                    <a onClick="closeed('selectDiv');" title="保存你选择的类目，并关闭类目选择框">[确定]</a>
                </div>
            </div>
        </td>
    </tr>
</table>
