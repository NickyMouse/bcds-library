package com.alibaba.intl.bcds.goldroom.dao.ibatis;

import java.sql.SQLException;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import com.alibaba.intl.bcds.goldroom.dao.MemberLogDAO;
import com.alibaba.intl.bcds.goldroom.dataobject.MemberLog;

public class MemberLogDAOImpl extends SqlMapClientDaoSupport implements
		MemberLogDAO {

	public int deleteByPrimaryKey(Integer id) throws SQLException {
		MemberLog key = new MemberLog();
		key.setId(id);
		int rows = getSqlMapClientTemplate().delete(
				"MEMBER_LOG.deleteByPrimaryKey", key);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table MEMBER_LOG
	 * 
	 * @ibatorgenerated Tue Sep 29 19:05:09 CST 2009
	 */
	public void insert(MemberLog record) throws SQLException {
		getSqlMapClientTemplate().insert("MEMBER_LOG.insert", record);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table MEMBER_LOG
	 * 
	 * @ibatorgenerated Tue Sep 29 19:05:09 CST 2009
	 */
	public void insertSelective(MemberLog record) throws SQLException {
		getSqlMapClientTemplate().insert("MEMBER_LOG.insertSelective", record);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table MEMBER_LOG
	 * 
	 * @ibatorgenerated Tue Sep 29 19:05:09 CST 2009
	 */
	public MemberLog selectByPrimaryKey(Integer id) throws SQLException {
		MemberLog key = new MemberLog();
		key.setId(id);
		MemberLog record = (MemberLog) getSqlMapClientTemplate()
				.queryForObject("MEMBER_LOG.selectByPrimaryKey", key);
		return record;
	}

	public int updateByPrimaryKeySelective(MemberLog record)
			throws SQLException {
		int rows = getSqlMapClientTemplate().update(
				"MEMBER_LOG.updateByPrimaryKeySelective", record);
		return rows;
	}

	public int updateByPrimaryKey(MemberLog record) throws SQLException {
		int rows = getSqlMapClientTemplate().update(
				"MEMBER_LOG.updateByPrimaryKey", record);
		return rows;
	}

}
