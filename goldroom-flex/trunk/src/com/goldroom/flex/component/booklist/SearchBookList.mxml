<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="760" height="486" xmlns:component="com.goldroom.flex.component.*" xmlns:services="com.goldroom.services.*" implements="com.goldroom.flex.script.page.IPageNavigator" xmlns:page="com.goldroom.flex.component.page.*">
	<fx:Script>
		<![CDATA[
			import com.goldroom.dataobject.BookItem;
			import com.goldroom.dataobject.BookSearch;
			import com.goldroom.flex.component.BookDetail;
			import com.goldroom.flex.component.ImagesList;
			import com.goldroom.flex.data.RunData;
			import com.goldroom.flex.script.page.IPageNavigator;
			
			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			import mx.controls.Alert;
			import mx.controls.advancedDataGridClasses.AdvancedDataGridItemRenderer;
			import mx.events.FlexEvent;
			import mx.rpc.events.ResultEvent;
			
			import spark.events.IndexChangeEvent;
			
			protected var currentPage:int = 1;
			protected var totalCount:int = 1;
			protected var searchKeyword:String = "";
			protected var pageSize:int = 12;
			protected var bookType:String = "all";
			
			public function setBookType(bookType:String):void{
				this.bookType = bookType;
			}
			public function reset(): void{
				currentPage = 1;
				totalCount = 1;
				searchKeyword = "";
			}

			public function searchAllBook(page:int):void{
				if(searchKeyword != "") {
					return;
				}
				listAllBookResult.token = bookInfoService.listAllBook(bookType, page, pageSize);
			}
			
			public function searchBookByKeyword(keyword:String, page:int):void {
				searchKeyword = keyword;
				listAllBookResult.token = bookInfoService.searchBookByKeyword(searchKeyword, bookType, page, pageSize);
			}
			
			protected function listAllBookResult_resultHandler(event:ResultEvent):void
			{
				if(listAllBookResult.lastResult.totalCount == 0){
					//Alert.show("暂无符合条件的书籍"+bookType);
					searchKeyword = "";
					if(bookType == "all"){
						searchAllBook(1);
					}
				}
				this.totalCount = listAllBookResult.lastResult.totalCount;
				var list:ArrayCollection = listAllBookResult.lastResult.bookList;
				pageNavigator.refresh();
				processResult(list);
			}
			
			protected function processResult(list:ArrayCollection):void{
				
				var imgUrls1:ArrayList = new ArrayList();
				var descs1:ArrayList = new ArrayList();
				var bookInfoIds1:ArrayList = new ArrayList();
				var count:int  = list.length;
				canvas.removeAllElements();
				if(list.length > pageSize/2){
					count = pageSize/2;
					var imgUrls2:ArrayList = new ArrayList();
					var descs2:ArrayList = new ArrayList();
					var bookInfoIds2:ArrayList = new ArrayList();
					for(var i:int = count; i < list.length; i++) {
						imgUrls2.addItem(BookSearch(list.getItemAt(i)).bookImgUrl);
						descs2.addItem(BookSearch(list.getItemAt(i)).bookName);
						bookInfoIds2.addItem(BookSearch(list.getItemAt(i)).bookInfoId);
					}
					var imagesList2:ImagesList = new ImagesList();
					imagesList2.createImagesList(imgUrls2, descs2, bookInfoIds2, true, false);
					imagesList2.x = 20;
					imagesList2.y = 250;
					canvas.addElement(imagesList2);

				} else {
				}
				
				for(i = 0; i < count; i++) {
					imgUrls1.addItem(BookSearch(list.getItemAt(i)).bookImgUrl);
					descs1.addItem(BookSearch(list.getItemAt(i)).bookName);
					bookInfoIds1.addItem(BookSearch(list.getItemAt(i)).bookInfoId);
				}
				
				var imagesList1:ImagesList = new ImagesList();
				imagesList1.createImagesList(imgUrls1, descs1, bookInfoIds1, true, false);
				imagesList1.x = 20;
				imagesList1.y = 20;
				canvas.addElement(imagesList1);
				
			}
			
			public function turnToPage(page:int):void{
				this.currentPage = page;
				if(searchKeyword.length > 0){
					searchBookByKeyword(searchKeyword, currentPage);
				} else {
					searchAllBook(currentPage);
				}
			}
			public function getCurrentPage():int {
				return this.currentPage;
			}
			
			public function getTotalCount():int{
				return this.totalCount;
			}



			protected function gallery1_creationCompleteHandler(event:FlexEvent):void
			{
				refresh();
			}


			public function refresh():void
			{
				pageNavigator.setPageNavigator(this, pageSize);
				searchAllBook(1)
			}
			protected function viewAllBtn_clickHandler(event:MouseEvent):void
			{
				searchKeyword = "";
				searchAllBook(1);
			}

		]]>
	</fx:Script>
	<fx:Declarations>
		<s:CallResponder id="listAllBookResult" result="listAllBookResult_resultHandler(event)"/>
		
		<services:BookInfoService id="bookInfoService" fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)" showBusyCursor="true"/>
	</fx:Declarations>
	<mx:Canvas  x="10" y="31"  creationComplete="gallery1_creationCompleteHandler(event)" id="canvas">
		
	</mx:Canvas>
	
	<page:PageNavigator x="297" y="1" id="pageNavigator">
	</page:PageNavigator>
	<mx:LinkButton x="10" y="1" label="查看全部" id="viewAllBtn" click="viewAllBtn_clickHandler(event)"/>
</s:Group>
