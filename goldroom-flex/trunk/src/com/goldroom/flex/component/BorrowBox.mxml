<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="448" height="292"  xmlns:services="com.goldroom.services.*">

	<fx:Script>
		<![CDATA[
			import com.goldroom.dataobject.BookItem;
			import com.goldroom.dataobject.Member;
			import com.goldroom.flex.data.RunData;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.rpc.events.ResultEvent;
			
			protected function cancelBtn_clickHandler(event:MouseEvent):void
			{
				this.visible = false;
			}

			protected function confirmBtn_clickHandler(event:MouseEvent):void
			{
				if(ownerDataGrid.selectedItem == null){
					this.confirmBtn.errorString = "请选择一位拥有者";	
					return;
				}
				if(startDateSelector.selectedDate == null || endDateSelector.selectedDate == null) {
					this.confirmBtn.errorString = "请选择借阅的开始与结束日期";	
					return;
				}
				var today:Date = new Date();
				today.setHours(0,0,0,0);
				if(startDateSelector.selectedDate < today){
					this.confirmBtn.errorString = "开始日期必须大于等于今天";
					return;
				}
				if(startDateSelector.selectedDate >  endDateSelector.selectedDate){
					this.confirmBtn.errorString = "开始日期必须小于等于结束日期";
					return;
				}
				
				if(startDateSelector.selectedDate >  endDateSelector.selectedDate){
					this.confirmBtn.errorString = "开始日期必须小于等于结束日期";
					return;
				}
				
				var startTime:Number = startDateSelector.selectedDate.valueOf();
				var endTime:Number = endDateSelector.selectedDate.valueOf();
				
				var different:Number = endTime-startTime; 
				var diffDay:int = int(different/24/60/60/1000);
				
				if(diffDay > 30) {
					Alert.show("借阅时间不得超过30天");
					return;
				}
				
				var bookItem:BookItem = BookItem(ownerDataGrid.selectedItem);
				reserveResult.token = reservationService.reserve(
						RunData.getRunData().getLoginUser().loginId, 
						bookItem.id, 
						startDateSelector.selectedDate, 
						endDateSelector.selectedDate);
			}
			
			public function initData(bookInfoId:int, bookOwners:String):void 
			{
				bookOwners = bookOwners.replace("@",".");
				var memberLoginIds:ArrayCollection =  new ArrayCollection(bookOwners.split(","));
				listBookItemsByLoginIdsAndBookInfoId.token = bookItemService.listBookItemsByLoginIdsAndBookInfoId(memberLoginIds, bookInfoId);
				startDateSelector.selectedDate = null;
				endDateSelector.selectedDate = null;
			}

			protected function listMemberByLoginIds_resultHandler(event:ResultEvent):void
			{
				var result:ArrayCollection = listBookItemsByLoginIdsAndBookInfoId.lastResult;
				var bookItem:BookItem;
				for(var i:int = 0; i < result.length; i++){
					bookItem = result.getItemAt(i) as BookItem;
					if(bookItem.state != "idle"){
						result.removeItemAt(i);
					}
				}
				
			}

			protected function getColumnValue(item:Object, column:DataGridColumn):String{
				if(column.dataField == "memberName"){
					return BookItem(item).member.name;		
				} else if(column.dataField == "memberEmail"){
					return BookItem(item).member.email;
				} else if(column.dataField == "memberAliTalk"){
					return BookItem(item).member.aliTalkId;
				} else if(column.dataField == "memberWorkId"){
					return BookItem(item).member.workId.toString();
				}
				return "";
			
			}

			protected function reserveResult_resultHandler(event:ResultEvent):void
			{
				if(reserveResult.lastResult){
					Alert.show("预约成功");
					this.visible = false;
				} else {
					Alert.show("预约失败，请重新尝试");
					this.visible = false;
				}
			}

		]]>
	</fx:Script>

	<fx:Declarations>
		<s:CallResponder id="listBookItemsByLoginIdsAndBookInfoId" result="listMemberByLoginIds_resultHandler(event)"/>
		<services:BookItemService id="bookItemService" fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)" showBusyCursor="true"/>
		<s:CallResponder id="reserveResult" result="reserveResult_resultHandler(event)"/>
		<services:ReservationService id="reservationService" fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)" showBusyCursor="true"/>
	</fx:Declarations>
	<s:Panel x="0" y="0" width="446" height="292" title="选择一个拥有者">
		<mx:DataGrid x="0" y="0" width="445" height="122" dataProvider="{listBookItemsByLoginIdsAndBookInfoId.lastResult}" id="ownerDataGrid">
			<mx:columns>
				<mx:DataGridColumn headerText="姓名" dataField="memberName" labelFunction="getColumnValue"/>
				<mx:DataGridColumn headerText="Email" dataField="memberEmail" labelFunction="getColumnValue"/>
				<mx:DataGridColumn headerText="贸易通" dataField="memberAliTalk" labelFunction="getColumnValue"/>
				<mx:DataGridColumn headerText="工号" dataField="memberWorkId" labelFunction="getColumnValue"/>
			</mx:columns>
		</mx:DataGrid>
		<s:Button x="123" y="201" label="借阅" id="confirmBtn" click="confirmBtn_clickHandler(event)"/>
		<mx:DateField x="123" y="139" id="startDateSelector"/>
		<mx:DateField x="301" y="140" id="endDateSelector"/>
		<s:Label x="64" y="149" text="开始日期:"/>
		<s:Label x="242" y="147" text="结束日期:"/>
		<s:Button x="257" y="201" label="取消" id="cancelBtn" click="cancelBtn_clickHandler(event)"/>
	</s:Panel>
</s:Group>
